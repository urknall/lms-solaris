#!/usr/bin/perl
## nappit add-on logitechmediaserver
## Jan. 2017, install script from urknall

############
## setup lms (Logitechmediaserver)
##
####################################################################################
#
#
####################################################################################

#install release
$LMSVERSION="7.9.1";
$PERLVERSION="5.24.1";
$YASMVERSION="1.3.0";
$NASMVERSION="2.13.02";

####################
# not on Solaris  11, included
####################
     $ant=`uname -a`;
     @par=split(/ /,$ant);
     if ($par[3]=~/^11\./i) {
       print "\n"x20;
       print "This lms installer is running on Illumos based systems only.\n\n";
       exit;
     }

###############
### root only !
###############
     $ant=`whoami`; chomp $ant;
     if ($ant ne "root") {
         print "user $ant not allowed\nlogin as root or su and run setup again!";
         exit;
     }

#run from $HOME ie /root
###############
               $t=`pwd`;
               $ant=`echo \$HOME`;
               if ($t ne $ant){
                      print "\n\n#####################\nYou must call wget as from your \$HOME-directory.\n Please do a cd /\$HOME and try again.\n\n";
                      exit;
               }

##date
#######
 ($sec,$min,$hour,$mday,$mon,$year,$wday,$ydat,$isdst) = localtime(time);
 $mon++;
 if ($min < 10)  { $min  = "0$min";  }
 if ($hour < 10) { $hour = "0$hour"; }
 if ($mday < 10) { $mday = "0$mday"; }
 if ($mon < 10)  { $mon  = "0$mon";  }
 $year=1900+$year;



##############
# Startmessage
##############
$t=`echo \$HOME`;
chomp($t);        # remove newline

      print "\n"x20;
      print "***************************************************************************\n\n";
      print "**    Setup Nappit Logitechmediaserver Addon - Jan 2017                  **\n";
      print "**    intended for OmniOS and OpenIndiana - not on Solaris 11            **\n\n";
      print "***************************************************************************\n\n";
      print "** Actions ():                                     \n";
      print "**                                                 **\n";
      print "***************************************************************************\n\n\n";
      print "*  \n";
      sleep(3);
      print " 3 \n"; sleep(2);
      print " 2 \n"; sleep(2);
      print " 1 \n"; sleep(2);

print "\n"x40;


#########################################################
## step 1. create BE, optionally add path to all commands
#########################################################

    # create BE pre setup
    $t=time();
    `beadm create pre_lms_setup_$LMSVERSION`;

#############################
## step 1: Install packages
#############################


echo "### Installing needed packages

pkg install --deny-new-be gcc51
pkg install --deny-new-be gnu-make gnu-tar linker header-math object-file gnu-coreutils lint system/header
pkg install --deny-new-be git
pkg install --deny-new-be rsync


#############################
## step 1: Install perl
#############################

`wget http://www.cpan.org/src/5.0/perl-$PERLVERSION.tar.gz`;
`tar -xzf perl-$PERLVERSION.tar.gz`;
`mv perl-$PERLVERSION perl-$PERLVERSION.src`;
`cd perl-$PERLVERSION.src`;
`./Configure -d -Dcc=gcc -Dusethreads -Duse64bitint -Dprefix=/opt/perl-$PERLVERSION -Dccflags="-D_REENTRANT \`;
`-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_TS_ERRNO -D_LARGEFILE64_SOURCE -D_FORTIFY_SOURCE=2 \`;
`-DPERL_USE_SAFE_PUTENV" -A ldflags=-fno-stack-protector`;
`gmake`;
`gmake install`;
`cd /root`;
